# services/elk_service.py

def test_connection(self):
    """Test the connection to the ELK service."""
    if not self.is_configured():
        return False, "ELK Service is not configured properly"
        
    try:
        # Create Basic Auth header from username and password
        auth_str = f"{self.username}:{self.password}"
        auth_bytes = auth_str.encode('ascii')
        auth_b64 = base64.b64encode(auth_bytes).decode('ascii')
        
        # Make a simple API request to test the connection
        headers = {
            "Content-Type": "application/json",
            "Authorization": f"Basic {auth_b64}"
        }
        
        # Simple query to check the cluster health
        response = requests.get(
            f"{self.api_endpoint}/_cluster/health",
            headers=headers,
            timeout=10
        )
        
        if response.status_code == 200:
            cluster_info = response.json()
            status = cluster_info.get('status', 'unknown')
            cluster_name = cluster_info.get('cluster_name', 'unknown')
            return True, f"Successfully connected to ELK cluster '{cluster_name}' (status: {status})"
        else:
            return False, f"Failed to connect to ELK: {response.status_code} - {response.text}"
            
    except Exception as e:
        logger.error(f"Error testing ELK service connection: {str(e)}")
        return False, f"Error connecting to ELK service: {str(e)}"
