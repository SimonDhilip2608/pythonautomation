# services/vegasgpt_service.py

def test_connection(self):
    """Test the connection to the Vegas GPT service."""
    if not self.is_configured():
        return False, "Vegas GPT Service is not configured properly - missing API token"
        
    try:
        # Simple test prompt
        data = {
            "variables": {
                "prompt": "Return 'Connection successful' as a simple test."
            },
            "model": "VEGAS",
            "model_settings": {
                "temperature": 0.1,
                "max_output_tokens": 20
            }
        }
        
        # Prepare the inference URL and headers
        inference_url = f"{self.agents_url}/inference/generate"
        headers = {
            'X-api-key': self.agents_token,
            'Content-Type': 'application/json'
        }
        
        # Log request details
        logger.debug(f"Testing connection to: {inference_url}")
        logger.debug(f"Headers: X-api-key: {self.agents_token[:5]}...")
        
        # Make the API request
        response = requests.post(
            inference_url, 
            json=data, 
            headers=headers, 
            timeout=10
        )
        
        # Check response
        if response.status_code == 200:
            # Try to parse the response to verify it's valid
            response_json = response.json()
            if 'ai_response' in response_json:
                return True, "Successfully connected to Vegas GPT service"
            else:
                return False, f"Connected but received unexpected response format: {response_json}"
        else:
            return False, f"Failed to connect: {response.status_code} - {response.text}"
            
    except Exception as e:
        logger.error(f"Error testing Vegas GPT service connection: {str(e)}")
        return False, f"Error connecting to Vegas GPT service: {str(e)}"
