# Add this to the sidebar in app.py

with st.sidebar:
    # ... existing sidebar code ...
    
    # Add a diagnostics section at the bottom
    st.markdown("---")
    with st.expander("Diagnostics"):
        if st.button("Run All Connection Tests"):
            st.write("Running connection tests...")
            
            results = []
            
            # Test ELK
            elk_success, elk_message = elk_service.test_connection()
            results.append(("ELK Service", elk_success, elk_message))
            
            # Test Vegas GPT
            vegas_success, vegas_message = vegas_service.test_connection()
            results.append(("Vegas GPT Service", vegas_success, vegas_message))
            
            # Test Synapt DB
            synapt_success, synapt_message = synapt_service.test_connection()
            results.append(("Synapt Database", synapt_success, synapt_message))
            
            # Display results in a table
            st.write("### Connection Test Results")
            
            for service, success, message in results:
                status = "✅ Success" if success else "❌ Failed"
                st.markdown(f"**{service}**: {status}")
                st.caption(message)
                st.markdown("---")
            
            # Check environment variables
            st.write("### Environment Variables")
            env_vars = [
                "ELK_API_ENDPOINT", "ELK_USERNAME", "ELK_PASSWORD",
                "INSPIRE_AGENTS_URL", "INSPIRE_AGENTS_TOKEN", 
                "SYNAPT_DB_HOST", "SYNAPT_DB_NAME", "SYNAPT_DB_USER"
            ]
            
            for var in env_vars:
                value = os.getenv(var)
                if value:
                    if "PASSWORD" in var or "TOKEN" in var:
                        display_val = f"{value[:3]}...{value[-3:]}" if len(value) > 6 else "***"
                        st.text(f"{var}: {display_val}")
                    else:
                        st.text(f"{var}: {value}")
                else:
                    st.text(f"{var}: Not set")
